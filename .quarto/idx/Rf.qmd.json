{"title":"Random Forest","markdown":{"yaml":{"title":"Random Forest","css":"custom.css"},"headingText":"Random Forest: Una Introducción Completa","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(readxl)\nlibrary(reactable)\nlibrary(plotly)\n```\n\n\nEl **Random Forest** es un modelo de aprendizaje supervisado basado en árboles de decisión. Fue introducido por Leo Breiman y Adele Cutler, y es conocido por ser un **algoritmo ensemble** que combina múltiples árboles de decisión para mejorar la precisión y reducir el riesgo de sobreajuste.\n\n#### ¿Cómo Funciona?\n\nRandom Forest construye una gran cantidad de árboles de decisión durante el entrenamiento y realiza predicciones promediando (en regresión) o votando (en clasificación) los resultados de estos árboles.\n\n##### Pasos Clave:\n\n1.  **Bootstrap Aggregation (Bagging):**\\\n    Cada árbol se entrena con una muestra aleatoria (con reemplazo) del conjunto de datos original.\n\n2.  **Selección Aleatoria de Características:**\\\n    Durante la construcción de cada árbol, en cada división se considera un subconjunto aleatorio de las características, lo que introduce diversidad y reduce la correlación entre árboles.\n\n3.  **Promedio o Votación:**\\\n    Las predicciones finales se obtienen promediando las predicciones (regresión) o por votación mayoritaria (clasificación).\n\n#### Ventajas:\n\n-   Maneja datos grandes y no lineales.\n\n-   Reduce el sobreajuste debido a la aleatoriedad en la selección de muestras y características.\n\n-   Es robusto a valores atípicos y datos faltantes.\n\n#### Desventajas:\n\n-   Puede ser más lento de entrenar y predecir que un modelo lineal.\n\n-   Es menos interpretable que un árbol de decisión simple.\n\n### Ejemplo en R: Random Forest para Regresión\n\nUtilizaremos el paquete `randomForest` para construir un modelo que prediga el **ingreso mensual** basado en **años de escolaridad** y una nueva variable, **edad**. También visualizaremos los resultados con `ggplot2`.\n\n##### Paso 1: Crear el Tibble Ficticio\n\n```{r}\nset.seed(123)\ndatos_rf <- tibble(\n  ingreso_mensual = round(rnorm(200, mean = 5000, sd = 1500), 2),\n  anios_esc = round(rnorm(200, mean = 12, sd = 3), 1),\n  edad = sample(18:65, 200, replace = TRUE)\n)\n\nreactable(datos_rf)\n```\n\n```{r}\nmodelo_rf <- randomForest(\n  ingreso_mensual ~ anios_esc + edad,\n  data = datos_rf,\n  ntree = 500,  \n  mtry = 2,   \n  importance = TRUE  \n)\n\nprint(modelo_rf)\n\n```\n\n##### Paso 3: Importancia de las Variables\n\n```{r}\nvarImpPlot(modelo_rf, main = \"Importancia de las Variables\")\n```\n\n##### Paso 4: Predicciones y Visualización\n\nGeneraremos un tibble con los valores reales y predichos para compararlos visualmente.\n\n```{r}\ndatos_rf <- datos_rf %>%\n  mutate(prediccion = predict(modelo_rf, newdata = datos_rf))\n\nggplot(datos_rf, aes(x = ingreso_mensual, y = prediccion)) +\n  geom_point(color = \"blue\", alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Random Forest: Valores Reales vs Predichos\",\n    x = \"Ingreso Mensual (Real)\",\n    y = \"Ingreso Mensual (Predicho)\"\n  ) +\n    theme_minimal()+\n    theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5, color = \"#34495E\", size = 12),\n    plot.subtitle = element_text(hjust = 0.5, color = \"#7F8C8D\"),\n    plot.caption = element_text(size = 10, hjust = 1, color = \"#95A5A6\"),\n    axis.title.x = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.title.y = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.text = element_text(color = \"#34495E\"),\n    panel.grid.major = element_line(color = \"#D0D3D4\", linewidth = 0.5),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n```{r}\nggplotly(\n  ggplot(datos_rf, aes(x = ingreso_mensual, y = prediccion)) +\n  geom_point(color = \"blue\", alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Random Forest: Valores Reales vs Predichos\",\n    x = \"Ingreso Mensual (Real)\",\n    y = \"Ingreso Mensual (Predicho)\"\n  ) +\n      theme_minimal()+\n    theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5, color = \"#34495E\", size = 12),\n    plot.subtitle = element_text(hjust = 0.5, color = \"#7F8C8D\"),\n    plot.caption = element_text(size = 10, hjust = 1, color = \"#95A5A6\"),\n    axis.title.x = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.title.y = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.text = element_text(color = \"#34495E\"),\n    panel.grid.major = element_line(color = \"#D0D3D4\", linewidth = 0.5),\n    panel.grid.minor = element_blank()\n  )\n)\n```\n","srcMarkdownNoYaml":"\n\n```{r}\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(readxl)\nlibrary(reactable)\nlibrary(plotly)\n```\n\n### Random Forest: Una Introducción Completa\n\nEl **Random Forest** es un modelo de aprendizaje supervisado basado en árboles de decisión. Fue introducido por Leo Breiman y Adele Cutler, y es conocido por ser un **algoritmo ensemble** que combina múltiples árboles de decisión para mejorar la precisión y reducir el riesgo de sobreajuste.\n\n#### ¿Cómo Funciona?\n\nRandom Forest construye una gran cantidad de árboles de decisión durante el entrenamiento y realiza predicciones promediando (en regresión) o votando (en clasificación) los resultados de estos árboles.\n\n##### Pasos Clave:\n\n1.  **Bootstrap Aggregation (Bagging):**\\\n    Cada árbol se entrena con una muestra aleatoria (con reemplazo) del conjunto de datos original.\n\n2.  **Selección Aleatoria de Características:**\\\n    Durante la construcción de cada árbol, en cada división se considera un subconjunto aleatorio de las características, lo que introduce diversidad y reduce la correlación entre árboles.\n\n3.  **Promedio o Votación:**\\\n    Las predicciones finales se obtienen promediando las predicciones (regresión) o por votación mayoritaria (clasificación).\n\n#### Ventajas:\n\n-   Maneja datos grandes y no lineales.\n\n-   Reduce el sobreajuste debido a la aleatoriedad en la selección de muestras y características.\n\n-   Es robusto a valores atípicos y datos faltantes.\n\n#### Desventajas:\n\n-   Puede ser más lento de entrenar y predecir que un modelo lineal.\n\n-   Es menos interpretable que un árbol de decisión simple.\n\n### Ejemplo en R: Random Forest para Regresión\n\nUtilizaremos el paquete `randomForest` para construir un modelo que prediga el **ingreso mensual** basado en **años de escolaridad** y una nueva variable, **edad**. También visualizaremos los resultados con `ggplot2`.\n\n##### Paso 1: Crear el Tibble Ficticio\n\n```{r}\nset.seed(123)\ndatos_rf <- tibble(\n  ingreso_mensual = round(rnorm(200, mean = 5000, sd = 1500), 2),\n  anios_esc = round(rnorm(200, mean = 12, sd = 3), 1),\n  edad = sample(18:65, 200, replace = TRUE)\n)\n\nreactable(datos_rf)\n```\n\n```{r}\nmodelo_rf <- randomForest(\n  ingreso_mensual ~ anios_esc + edad,\n  data = datos_rf,\n  ntree = 500,  \n  mtry = 2,   \n  importance = TRUE  \n)\n\nprint(modelo_rf)\n\n```\n\n##### Paso 3: Importancia de las Variables\n\n```{r}\nvarImpPlot(modelo_rf, main = \"Importancia de las Variables\")\n```\n\n##### Paso 4: Predicciones y Visualización\n\nGeneraremos un tibble con los valores reales y predichos para compararlos visualmente.\n\n```{r}\ndatos_rf <- datos_rf %>%\n  mutate(prediccion = predict(modelo_rf, newdata = datos_rf))\n\nggplot(datos_rf, aes(x = ingreso_mensual, y = prediccion)) +\n  geom_point(color = \"blue\", alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Random Forest: Valores Reales vs Predichos\",\n    x = \"Ingreso Mensual (Real)\",\n    y = \"Ingreso Mensual (Predicho)\"\n  ) +\n    theme_minimal()+\n    theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5, color = \"#34495E\", size = 12),\n    plot.subtitle = element_text(hjust = 0.5, color = \"#7F8C8D\"),\n    plot.caption = element_text(size = 10, hjust = 1, color = \"#95A5A6\"),\n    axis.title.x = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.title.y = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.text = element_text(color = \"#34495E\"),\n    panel.grid.major = element_line(color = \"#D0D3D4\", linewidth = 0.5),\n    panel.grid.minor = element_blank()\n  )\n\n```\n\n```{r}\nggplotly(\n  ggplot(datos_rf, aes(x = ingreso_mensual, y = prediccion)) +\n  geom_point(color = \"blue\", alpha = 0.6) +\n  geom_abline(slope = 1, intercept = 0, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Random Forest: Valores Reales vs Predichos\",\n    x = \"Ingreso Mensual (Real)\",\n    y = \"Ingreso Mensual (Predicho)\"\n  ) +\n      theme_minimal()+\n    theme(\n    plot.title = element_text(face = \"bold\", hjust = 0.5, color = \"#34495E\", size = 12),\n    plot.subtitle = element_text(hjust = 0.5, color = \"#7F8C8D\"),\n    plot.caption = element_text(size = 10, hjust = 1, color = \"#95A5A6\"),\n    axis.title.x = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.title.y = element_text(face = \"bold\", color = \"#2C3E50\", size = 12),\n    axis.text = element_text(color = \"#34495E\"),\n    panel.grid.major = element_line(color = \"#D0D3D4\", linewidth = 0.5),\n    panel.grid.minor = element_blank()\n  )\n)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"vim-dark","css":["custom.css"],"output-file":"Rf.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","comments":{"hypothesis":true},"theme":{"light":["flatly","theme-light.scss"],"dark":["darkly","theme-dark.scss"]},"code-summary":"Mostrar el Código","title":"Random Forest"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}